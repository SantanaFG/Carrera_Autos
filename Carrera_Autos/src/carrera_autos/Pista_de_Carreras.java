/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package carrera_autos;

import java.awt.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.Random;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author DELL
 */
public class Pista_de_Carreras extends javax.swing.JFrame {

    /**
     * Creates new form Pista_de_Carreras
     */
    private Timer timer; // OBJETO DE TIMER PARA ACTUALIZAR EL TIEMPO
    private long startTime; // VARIABLE DE TIPO LONG PARA GUARDAR EL TIEMPO DE INICIO
    private long tiempoTranscurrido;// VARIABLE DE TIPO LONG PARA GUARDAR EL TIEMPO TRANSCURRIDO
    private Thread cronometroThread;
    private MoverLabel moverPeach;
    private MoverLabel moverYoshi;
    private MoverLabel moverMario;
    private MoverLabel moverDK;

    static int hora = 0, minutos = 0, segundo = 0, milise = 0;
    static boolean inicio = true;
    boolean proceso = false;

    public Pista_de_Carreras() {
        initComponents();
        jInternalFrame1.setBorder(null);
        BasicInternalFrameUI bui = (BasicInternalFrameUI) this.jInternalFrame1.getUI();
        bui.setNorthPane(null);
        setLocationRelativeTo(this);
    }

    public JLabel getPeach() {
        return Peach;
    }

    public JLabel getYoshi() {
        return Yoshi;
    }

    public JLabel getMario() {
        return Mario;
    }

    public JLabel getDK() {
        return DK;
    }

    public JLabel getMeta() {
        return Meta;
    }

    public void reiniciar() {
        Pista_de_Carreras.segundo = 0;
        Pista_de_Carreras.hora = 0;
        Pista_de_Carreras.minutos = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BanderaD = new javax.swing.JLabel();
        Bandera_Iz = new javax.swing.JLabel();
        Titulo = new javax.swing.JLabel();
        Meta = new javax.swing.JLabel();
        Peach = new javax.swing.JLabel();
        Pista1 = new javax.swing.JLabel();
        Yoshi = new javax.swing.JLabel();
        Mario = new javax.swing.JLabel();
        Pista2 = new javax.swing.JLabel();
        DK = new javax.swing.JLabel();
        Pista3 = new javax.swing.JLabel();
        Pista4 = new javax.swing.JLabel();
        jBStart = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        tiempo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Carrera de Autos");
        setBackground(new java.awt.Color(51, 51, 51));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BanderaD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Banderas.png"))); // NOI18N
        getContentPane().add(BanderaD, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, -1, -1));

        Bandera_Iz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Banderas.png"))); // NOI18N
        getContentPane().add(Bandera_Iz, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, -1, -1));

        Titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Titulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logo_1.png"))); // NOI18N
        getContentPane().add(Titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 810, 81));

        Meta.setBackground(new java.awt.Color(255, 255, 102));
        Meta.setOpaque(true);
        getContentPane().add(Meta, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 100, 10, 400));

        Peach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/peachsprite.png"))); // NOI18N
        getContentPane().add(Peach, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 100, 80));

        Pista1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Pista.png"))); // NOI18N
        Pista1.setOpaque(true);
        getContentPane().add(Pista1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 820, 100));

        Yoshi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/yoshisprite.png"))); // NOI18N
        getContentPane().add(Yoshi, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, 100, 80));

        Mario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mariosprite.png"))); // NOI18N
        getContentPane().add(Mario, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, 100, 80));

        Pista2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Pista.png"))); // NOI18N
        getContentPane().add(Pista2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 300, 820, 100));

        DK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/dksprite.png"))); // NOI18N
        getContentPane().add(DK, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 410, 100, 80));

        Pista3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Pista.png"))); // NOI18N
        getContentPane().add(Pista3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, 820, 100));

        Pista4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Pista.png"))); // NOI18N
        getContentPane().add(Pista4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 820, 100));

        jBStart.setText("START");
        jBStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBStartActionPerformed(evt);
            }
        });
        getContentPane().add(jBStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 520, -1, -1));

        jButton2.setText("PAUSE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 520, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/peach.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 80, 80));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/yoshi.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 80, 80));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mario.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 80, 80));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/dk.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 80, 80));

        jInternalFrame1.setVisible(true);

        tiempo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tiempo.setText("jLabel6");

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getContentPane().add(jInternalFrame1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 170, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jBStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBStartActionPerformed
        ArrayList<String> ordenLlegada = new ArrayList<>();
        reiniciar();
        moverPeach = new MoverLabel(Peach, "Peach", ordenLlegada);
        moverYoshi = new MoverLabel(Yoshi, "Yoshi", ordenLlegada);
        moverMario = new MoverLabel(Mario, "Mario", ordenLlegada);
        moverDK = new MoverLabel(DK, "Don Ko", ordenLlegada);

        Thread threadPeach = new Thread(moverPeach);
        Thread threadYoshi = new Thread(moverYoshi);
        Thread threadMario = new Thread(moverMario);
        Thread threadDK = new Thread(moverDK);

//         //Iniciar los hilos
        threadPeach.start();
        threadYoshi.start();
        threadMario.start();
        threadDK.start();
        if (proceso == false) {
            inicio = true;
            proceso = true;
            cronometro();
        }
    }//GEN-LAST:event_jBStartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pista_de_Carreras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pista_de_Carreras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pista_de_Carreras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pista_de_Carreras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pista_de_Carreras().setVisible(true);
            }
        });
    }

    private class MoverLabel implements Runnable {

        private final JLabel label;
        private double velocidad;
        private String nombre;
        private ArrayList<String> ordenLlegada;

        public MoverLabel(JLabel label, String nombre, ArrayList<String> ordenLlegada) {
            this.label = label;
            this.nombre = nombre;
            this.velocidad = generarVelocidad();
            this.ordenLlegada = ordenLlegada;
        }

        @Override
        public void run() {
            double posX = label.getLocation().getX(); // Posición inicial en el eje X
            double posY = label.getLocation().getY(); // Posición en el eje Y

            double finalX = 800; // Valor final en el eje X

            while (posX < finalX) {
                try {
                    Thread.sleep(10); // Ajusta el tiempo de espera según tus necesidades

                    // Generar una velocidad aleatoria en cada iteración
                    double velocidad = 0.5 + (3.5 - 0.5) * Math.random(); // Velocidad aleatoria entre 0.5 y 3.5

                    // Actualizar la posición según la velocidad actual
                    posX += velocidad;
                    label.setLocation((int) posX, (int) posY);

                    // Repintar el label para mostrar su nueva posición
                    label.repaint();
                } catch (InterruptedException ex) {
                    ex.printStackTrace();
                }
            }

            // Mostrar el mensaje indicando qué label llegó primero
            synchronized (ordenLlegada) {
                ordenLlegada.add(nombre);
            }
            StringBuilder mensaje = new StringBuilder();
            for (int i = 0; i < ordenLlegada.size(); i++) {
                String posicion;
                switch (i + 1) {
                    case 1:
                        posicion = "1st";
                        break;
                    case 2:
                        posicion = "2nd";
                        break;
                    case 3:
                        posicion = "3rd";
                        break;
                    default:
                        posicion = (i + 1) + "th";
                        break;
                }
                mensaje.append(posicion).append(". ").append(ordenLlegada.get(i)).append("\n");
                if (proceso == true) {
                    inicio = false;
                    proceso = false;
                }
            }
            Peach.setLocation(85, 110);
            Yoshi.setLocation(85, 210);
            Mario.setLocation(85, 310);
            DK.setLocation(85, 410);
            JOptionPane.showMessageDialog(rootPane, mensaje.toString());

        }

        private double generarVelocidad() {
            double velocidad;
            HashSet<Double> velocidadesPrevias = obtenerVelocidadesPrevias();

            do {
                velocidad = 0.5 + (2.5 - 0.5) * new Random().nextDouble(); // Velocidad aleatoria entre 0.5 y 2.5
            } while (velocidadesPrevias.contains(velocidad) || existeVelocidadRepetida(velocidad));

            return velocidad;
        }

        private boolean existeVelocidadRepetida(double velocidad) {
            int count = 0;

            if (moverPeach != null && moverPeach.getVelocidad() == velocidad) {
                count++;
            }
            if (moverYoshi != null && moverYoshi.getVelocidad() == velocidad) {
                count++;
            }
            if (moverMario != null && moverMario.getVelocidad() == velocidad) {
                count++;
            }
            if (moverDK != null && moverDK.getVelocidad() == velocidad) {
                count++;
            }

            return count > 1;
        }

        private HashSet<Double> obtenerVelocidadesPrevias() {
            HashSet<Double> velocidadesPrevias = new HashSet<>();

            if (this == moverPeach) {
                if (moverYoshi != null) {
                    velocidadesPrevias.add(moverYoshi.getVelocidad());
                }
                if (moverMario != null) {
                    velocidadesPrevias.add(moverMario.getVelocidad());
                }
                if (moverDK != null) {
                    velocidadesPrevias.add(moverDK.getVelocidad());
                }
            } else if (this == moverYoshi) {
                if (moverPeach != null) {
                    velocidadesPrevias.add(moverPeach.getVelocidad());
                }
                if (moverMario != null) {
                    velocidadesPrevias.add(moverMario.getVelocidad());
                }
                if (moverDK != null) {
                    velocidadesPrevias.add(moverDK.getVelocidad());
                }
            } else if (this == moverMario) {
                if (moverPeach != null) {
                    velocidadesPrevias.add(moverPeach.getVelocidad());
                }
                if (moverYoshi != null) {
                    velocidadesPrevias.add(moverYoshi.getVelocidad());
                }
                if (moverDK != null) {
                    velocidadesPrevias.add(moverDK.getVelocidad());
                }
            } else if (this == moverDK) {
                if (moverPeach != null) {
                    velocidadesPrevias.add(moverPeach.getVelocidad());
                }
                if (moverYoshi != null) {
                    velocidadesPrevias.add(moverYoshi.getVelocidad());
                }
                if (moverMario != null) {
                    velocidadesPrevias.add(moverMario.getVelocidad());
                }
            }

            return velocidadesPrevias;
        }

        public double getVelocidad() {
            return velocidad;
        }
    }

    public void cronometro() {
        if (inicio == true) {
            System.out.println("inicia cromonemtro");
            Cronometro crono = new Cronometro(tiempo);
            crono.start();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BanderaD;
    private javax.swing.JLabel Bandera_Iz;
    private javax.swing.JLabel DK;
    private javax.swing.JLabel Mario;
    private javax.swing.JLabel Meta;
    private javax.swing.JLabel Peach;
    private javax.swing.JLabel Pista1;
    private javax.swing.JLabel Pista2;
    private javax.swing.JLabel Pista3;
    private javax.swing.JLabel Pista4;
    private javax.swing.JLabel Titulo;
    private javax.swing.JLabel Yoshi;
    private javax.swing.JButton jBStart;
    private javax.swing.JButton jButton2;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel tiempo;
    // End of variables declaration//GEN-END:variables
}
